-- Робот для торговли на срочном рынке на основе индикатора ПАРАБОЛИК
-- Версия 1.0

dofile(getScriptPath().."\\Math.lua")																																	-- подключаем пользовательскую библиотеку

is_run = true																																										-- переменная для повторения цикла робота
Timer = 0																																											-- таймер задержки
Problem = ""																																									-- уведомления об ошибках
ErrorStr = 0																																										-- номер строки с ошибкой в таблице
Slip = 30																																											-- проскальзывание робота при отправлении транзакции
PosPrev = 0 																																									-- позиция на предыдущем шаге

Class = "SPBFUT"																																							-- класс
Emit = "SiZ1"																																									-- инструмент
MyAccount = "SPBFUT000o1"																																		-- номер счета НА РЫНКЕ ФОРТС
IdSAR = "SAR"																																								-- идентификатор графика Параболик SAR (обязательно необходимо прописать в КВИКЕ)
IdPriceSAR = "PRICE_SAR"																																			-- идентификатор цены на графике (обязательно необходимо прописать в КВИКЕ)
Lot = 1																																												--сколько контрактов мы хотим торговать
TradeType = "REVERCE"																																				-- тип торговли Лонг, Шорт или Реверс
Profit = 50																																										-- профит (задается в шагах цены)
	-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

function OnInit()																																								-- действия, которые выполняются один раз, перед запуском дополнительного потока
	PutDataToTableInit()																																					-- создание таблицы робота
	WriteToLogFile("Робот запущен!")																																-- пишем лог
end

function main()																																									-- функция дополнительного потока, в которой производятся основные вычисления
	while is_run do
		Body()																																										-- основные вычисления и алгоритм робота в отдельном файле
	end
end

function OnTrade(TradeX)																																				-- действия при появлении новой сделки

end

function OnOrder(OrderX)																																				-- действия при появлении заявки

end

function OnStopOrder()																																					-- действия при появлении стоп-заявки

end

function OnStop()																																								-- действия, которые выполняются при остановке робота
	is_run = false
	DestroyTable(TableId)																																					-- удаляем таблицу
	WriteToLogFile("Робот остановлен!")
end